@using TriageSystem.Models
@model Hospital

<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
<link href="~/css/DetailsPageStyle.css" rel="stylesheet" type="text/css" media="all">
<link href="~/css/site.css" rel="stylesheet" type="text/css" media="all">


<h2 class="module">
    @Html.DisplayFor(model => model.Name), @Html.DisplayFor(model => model.Location)
</h2>
<hr />
<p>
    <a asp-controller="Patient" asp-action="Register">Register Patient</a>
</p>



@{ var id = 0;}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PatientCheckInList.FirstOrDefault().Patient.Full_name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientCheckInList.FirstOrDefault().Patient.PPS)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientCheckInList.FirstOrDefault().Infections)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientCheckInList.FirstOrDefault().Arrival)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientCheckInList.FirstOrDefault().Time_checked_in)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PatientCheckInList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Patient.Full_name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Patient.PPS)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Infections)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Arrival)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time_checked_in)
                </td>
                <td>
                    <form asp-controller="Patient" asp-action="CheckedIn" id="form" method="post">
                        <input type="hidden" name="id" value="@item.PatientId" />
                        <input id="sendButton" type="submit" value="View" class="btn btn-default" />
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
<p>
    <a asp-controller="Triage" asp-action="SelectFlowcharts">Perform Triage</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PatientWaitingList.FirstOrDefault().Patient.Full_name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientWaitingList.FirstOrDefault().Patient.PPS)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientWaitingList.FirstOrDefault().Condition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientWaitingList.FirstOrDefault().Time_checked_in)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientWaitingList.FirstOrDefault().Time_triaged)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientWaitingList.FirstOrDefault().Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PatientWaitingList.FirstOrDefault().Priority)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PatientWaitingList)
        {
        <tr class="t">
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Full_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.PPS)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Condition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time_checked_in)
            </td>
            <td id="time-@id">
                @Html.DisplayFor(modelItem => item.Time_triaged)
            </td>
            <td class="duration" id="@id"></td>
            <td class="@item.Priority">
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                <form asp-controller="Patient" asp-action="Actions" id="form" method="post">
                    @*Input id could be helpful, could use it for js to read PatientIds value*@
                    <input type="hidden" name="id" value="@item.PatientId" />
                    @*<input type="hidden" asp-for="@item.PatientId" />*@
                    <input id="sendButton" type="submit" value="Action" class="btn btn-default" />
                </form>
            </td>

            <td id="expiry-@id" style="visibility:hidden; display:none"> @Html.DisplayFor(modelItem => item.Expiry_time)</td>
            <td id="patient-@id" style="visibility:hidden; display:none"> @Html.DisplayFor(modelItem => item.PatientId)</td>
        </tr>
            id++;
        }
    </tbody>
</table>
<div id="dialog" style="display: none" align="center">
    Do you want to delete this record?
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
@*<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>*@
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@*<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>*@
@*<script src="https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.js"></script>*@
<script>
    $(document).ready(function () {
        var seconds = 0;
        var secondsCounter = setInterval(countSeconds, 1000);

        function countSeconds() {
            seconds++;
            if (seconds > 60) {
                clearInterval(secondsCounter);
                return;
            }
        }


        var elements = document.getElementsByClassName("t");
        var counter = setInterval(timer, 1000) //1000 will  run it every 1 second
        function timer() {
            var ids = [];
            var notifications = [];

            for (var i = 0; i < elements.length; i++) {
                //var e = elements[i].children[7].textContent.trim(); // hidden element
                var e = document.getElementById("expiry-" + i).textContent.trim(); // hidden element
                var expiryTime = new Date(e).getTime();
                //console.log(expiryTime);
                var display = document.getElementById(i);
                var distance = expiryTime - new Date().getTime();
                //console.log("distance " + distance);
                if (distance > 0) {
                    countdown = new Date().setTime(distance);
                    var h = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    var m = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    var s = Math.floor((distance % (1000 * 60)) / 1000);
                    display.textContent = parseTime(h, m, s);
                }
                else {
                    if (display.textContent != "Expired") {
                        display.textContent = "Expired";
                        var x = elements[i].children[5].textContent.trim();
                        if (x != "Red") {
                            ids.push(document.getElementById("patient-" + i).textContent.trim());
                            notifications.push(elements[i].children[0].textContent.trim() + " needs to be seen immediately or re-triaged!");
                        }
                    }
                }
            }
            if (notifications.length > 0) {
                showNotifications(ids, notifications);
                }
        }




        var alerts = setInterval(checkTimes, 10000)//(1000 * 60 * 5));

        function checkTimes() {
            console.log("checkTimes");
            var elements = document.getElementsByClassName("t");
            var previousIndex = -1;
            var ids = [];
            var notifications = [];
            for (var i = 0; i < elements.length; i++) {
                var display = document.getElementById(i);
                if (display.textContent == "Expired") {
                    ids.push(document.getElementById("patient-" + i).textContent.trim());
                    notifications.push(elements[i].children[0].textContent.trim() + " needs to be re-triaged or seen immediately!");
                }
            }
            console.log(notifications);
            showNotifications(ids, notifications);
        }




        function showNotifications(ids, notifications) {

            if (notifications.length > 0 && ids.length > 0) {
                var i = 0;
                function displayNext() {
                    swal({
                        title: "Do you want to re-triage the patient?",
                        text: notifications[i],
                        icon: "warning",
                        dangerMode: true,
                        buttons: {
                            yes: {
                                text: "Yes",
                                value: true
                            },
                            cancel: "No",

                        },
                    }).then((willDelete) => {
                        console.log(willDelete);
                        //e.preventDefault();

                        if (willDelete) {
                            $.ajax({
                                url: "Patient/PostAjax",
                                type: "POST",
                                data: { "id": ids[i - 1] },
                                success: function (response) {
                                    if (response == "Success") {

                                        swal({
                                            title: "Patient re-triage!",
                                            text: "Patient added to the triage assessment list!",
                                            icon: "success",
                                            buttons: false,
                                        });
                                        setTimeout(function () {
                                            window.location.href = '@Url.Action("Index", "Home", new { refresh = true})';
                                        }, 2000);
                                    }
                                    else {
                                        alert(response);
                                    }
                                },
                                error: function (response) {
                                    alert("not working");
                                }
                            });
                        } else {
                            if (i < notifications.length) {
                                setTimeout(function () {
                                    displayNext();
                                }, 500);
                            }
                        }
                    });
                    i++;
                }
                displayNext();
            }
        }
         // ref: https://github.com/t4t5/sweetalert/issues/472


        function parseTime(h, m, s) {
            if (h < 10) {
                h = "0" + h;
            }
            if (m < 10) {
                m = "0" + m;
            }
            if (s < 10) {
                s = "0" + s;
            }
            return h + ":" + m + ":" + s;
        }





        // ref: https://www.w3schools.com/howto/howto_js_countdown.asp
    });

</script>