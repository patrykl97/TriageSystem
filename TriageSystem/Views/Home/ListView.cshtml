@using TriageSystem.Areas.Identity.Data
@model TriageSystemUser
<p>
    <a asp-controller="Patient" asp-action="Register">Register Patient</a>
</p>
<h2 id="hospitalID">@Html.DisplayFor(model => model.Staff.HospitalID)</h2>
<h2>@Html.DisplayFor(model => model.Staff.Hospital.Name)</h2>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientCheckInList.FirstOrDefault().Patient.Full_name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientCheckInList.FirstOrDefault().PPS)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientCheckInList.FirstOrDefault().Infections)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientCheckInList.FirstOrDefault().Arrival)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientCheckInList.FirstOrDefault().Time_checked_in)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Staff.Hospital.PatientCheckInList)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Full_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PPS)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Infections)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Arrival)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time_checked_in)
            </td>
            <td>
                <a asp-action="View" asp-route-id="@item.HospitalID">View</a> |

            </td>
        </tr>
        }
    </tbody>
</table>
<br />
<p>
    <a asp-controller="Triage" asp-action="SelectFlowcharts">Perform Triage</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientWaitingList.FirstOrDefault().Patient.Full_name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientWaitingList.FirstOrDefault().PPS)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientWaitingList.FirstOrDefault().Condition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientWaitingList.FirstOrDefault().Time_checked_in)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientWaitingList.FirstOrDefault().MinutesLeft)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staff.Hospital.PatientWaitingList.FirstOrDefault().Priority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Staff.Hospital.PatientWaitingList)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Patient.Full_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PPS)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Condition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time_checked_in)
            </td>
            <td id="duration">
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            @{
                var x = item.Priority;
            }
            <td class="@x" id="@item.PatientId">
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                <a asp-action="View" asp-route-id="@item.HospitalID">View</a> |

            </td>
        </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        var display = document.getElementById("duration");
        var t = parseInt(display.textContent);
        console.log(t);
        timer = new CountDownTimer(20),
        timeObj = CountDownTimer.parse(20);

        format(timeObj.minutes, timeObj.seconds);

        timer.onTick(format);


        function format(minutes, seconds) {
            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;
            display.textContent = seconds;
            //console.log("i");
        }

        timer.start();
    });

</script>