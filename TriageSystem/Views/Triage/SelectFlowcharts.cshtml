@model TriageSystem.Models.PatientWaitingList

@{
    ViewData["Title"] = "TriageAssessment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/select2.min.css" rel="stylesheet" />

<style>
    .control-label {
        display: block;
        background: #347BB7;
        background: -webkit-linear-gradient(top left, #347BB7, #98E6E8);
        background: -moz-linear-gradient(top left, #347BB7, #98E6E8);
        background: linear-gradient(top left, #347BB7, #98E6E8);
        border-radius: 5px;
        padding: 3px;
        /*margin: 5px;*/
        color: white;
    }

</style>

<h2 class="module">Triage Assessment</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Assessment">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" id="patientId" asp-for="PatientId" />
            <input type="hidden" id="hospitalID" asp-for="HospitalID" />
            <input type="hidden" id="timeCheckedIn" asp-for="Time_checked_in" />
            <div class="form-group">
                <label asp-for="Patient.PPS" class="control-label"></label>
                <input asp-for="Patient.PPS" class="form-control" readonly="readonly" />
            </div>
            <div class="form-group">
                <label asp-for="Patient.Full_name" class="control-label">Full name</label>
                <p>@Html.DisplayFor(model => model.Patient.Full_name)</p>
            </div>
            <div class="form-group">
                <label asp-for="Patient.Date_of_birth" class="control-label">Date of birth</label>
                <p>@Html.DisplayFor(model => model.Patient.Date_of_birth)</p>
            </div>
            <div class="form-group">
                <label asp-for="Arrival" class="control-label"></label>
                <input asp-for="Arrival" class="form-control" readonly="readonly" />
                <span asp-validation-for="Arrival" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Infections" class="control-label"></label>
                <input asp-for="Infections" class="form-control" />
                <span asp-validation-for="Infections" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Condition" class="control-label"></label>
                <input asp-for="Condition" class="form-control" />
                <span asp-validation-for="Condition" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Flowchart" class="control-label"></label>
                @*@Html.DropDownListFor(model => model.FlowchartSelected, ViewBag.FlowchartNames as IEnumerable<SelectListItem>, "Select at least one flowchart...", new { id = "FlowchartsDropdown" });*@
                @*@Html.DropDownListFor(model => model.Flowchart, new SelectList(Model.Flowcharts, "Value", "Text"), "Select at least one flowchart...", new { id = "FlowchartsDropdown" });*@
                <select class="flowcharts" asp-for="FlowchartId" asp-items="ViewBag.Flowcharts" style="width: 100%;"></select>
            </div>
            <div class="form-group">
                @*<a asp-action="Edit" asp-route-id="@Model.PPS" class="btn btn-default">Edit</a>*@
                <input id="sendButton" type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
   @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/select2.min.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script>

        $(document).ready(function () {
            $('.flowcharts').select2();
        });



    //var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:44375/notificationHub").build();
    //connection.logging = true;
    //Disable send button until connection is established
    //document.getElementById("sendButton").disabled = true;
    //connection.start().catch(function (err) {
    //    return console.error(err.toString());
    //});


    @*document.getElementById("sendButton").addEventListener("click", function (event) {

        var hospitalID = document.getElementById("hospitalID").value;
        var patient = {};
        console.log("working here----------------------------------------");
        patient.PPS = document.getElementById("PPS").value;
        patient.Condition = document.getElementById("Condition").value;
        var flowcharts = [];
        flowcharts.push(document.getElementById("FlowchartsDropdown").value);

        //patient.Flowchart = document.getElementById("Flowcharts").
        patient.HospitalID = parseInt(hospitalID);
        //patient.Priority = document.getElementById("Priority").value;
        console.log(patient);
        console.log(typeof (patient.HospitalID));
        @*var url = '@Url.Action("TriageAssessment2", "Home", new { id = "ID"})'.replace("ID", parseInt(id));;


        var array = [];
        array.push(patient.PPS.toString());
        for (var i = 0; i < flowcharts.length; i++) {
            array.push(flowcharts[i]);
        }
        console.log(array);
        $.ajax({
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("TriageAssessmentGenerateUrl", "Home")',
            data: JSON.stringify(array),
            success: function (response) {
                console.log(response);
                if (response != "Error") {
                    //window.location.href = response;
                } else {
                    alert(response);
                }
            },
            error: function (response) {
                alert(response + " error");
            }
        });*@
    </script>

}
